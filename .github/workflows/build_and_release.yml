# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    tags:
      - 'v*'

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: release
      uses: actions/create-release@v1.1.4
      id: create_release
      with:
        draft: false
        prerelease: false
        release_name: ${{github.ref_name}}
        tag_name: ${{ github.ref }}
      env:
        GITHUB_TOKEN: ${{ github.token }}
      
# Build for Windows 64
    - name: Build Windows 64
      run: GOOS=windows GOARCH=amd64 ./build

    - name: upload Windows 64 artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./wmetrics.exe
        asset_name: wmetrics_win_x64.exe
        asset_content_type: application/octet-stream

# Build for Windows 32
    - name: Build Windows 32
      run: GOOS=windows GOARCH=386 ./build

    - name: upload Windows 32 artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./wmetrics.exe
        asset_name: wmetrics_win_x86.exe
        asset_content_type: application/octet-stream

# Build for Linux 64
    - name: Build Linux 64
      run: GOOS=linux GOARCH=amd64 ./build

    - name: upload Linux 64 artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./wmetrics
        asset_name: wmetrics_linux_x64
        asset_content_type: application/octet-stream

# Build for Linux 32
    - name: Build Linux 32
      run: GOOS=linux GOARCH=386 ./build

    - name: upload Linux 32 artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./wmetrics
        asset_name: wmetrics_linux_x86
        asset_content_type: application/octet-stream

# Build for macOS 64
    - name: Build Mac OS 64
      run: GOOS=darwin GOARCH=amd64 ./build

    - name: upload Mac OS 64 artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./wmetrics
        asset_name: wmetrics_macos_x64
        asset_content_type: application/octet-stream
        
